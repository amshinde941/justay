[{"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\index.js":"1","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\App.js":"2","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\reportWebVitals.js":"3","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\MenuComponent.js":"4","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\dishes.js":"5","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\Dishdetail.js":"6","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\MainComponent.js":"7","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\HeaderComp.js":"8","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\FooterComp.js":"9","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\HomeComp.js":"10","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\ContactComp.js":"11","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\leaders.js":"12","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\comments.js":"13","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\promotions.js":"14","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\AboutComponent.js":"15","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\configureStore.js":"16","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\dishes.js":"17","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\comments.js":"18","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\leaders.js":"19","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\promotions.js":"20","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\ActionTypes.js":"21","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\ActionCreater.js":"22","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\LoadingComponent.js":"23","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\forms.js":"24","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\baseUrl.js":"25"},{"size":663,"mtime":1618231011704,"results":"26","hashOfConfig":"27"},{"size":526,"mtime":1618494442766,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":2248,"mtime":1620815964361,"results":"30","hashOfConfig":"27"},{"size":1458,"mtime":1618319785734,"results":"31","hashOfConfig":"27"},{"size":7496,"mtime":1620904062052,"results":"32","hashOfConfig":"27"},{"size":4198,"mtime":1621070022489,"results":"33","hashOfConfig":"27"},{"size":5323,"mtime":1618766521496,"results":"34","hashOfConfig":"27"},{"size":3222,"mtime":1621445655887,"results":"35","hashOfConfig":"27"},{"size":2135,"mtime":1620928289254,"results":"36","hashOfConfig":"27"},{"size":10121,"mtime":1621070134431,"results":"37","hashOfConfig":"27"},{"size":2350,"mtime":1618334631548,"results":"38","hashOfConfig":"27"},{"size":4279,"mtime":1618312442107,"results":"39","hashOfConfig":"27"},{"size":437,"mtime":1618313673423,"results":"40","hashOfConfig":"27"},{"size":5182,"mtime":1621070950462,"results":"41","hashOfConfig":"27"},{"size":803,"mtime":1619113806180,"results":"42","hashOfConfig":"27"},{"size":634,"mtime":1618764700550,"results":"43","hashOfConfig":"27"},{"size":657,"mtime":1620887172790,"results":"44","hashOfConfig":"27"},{"size":629,"mtime":1620926072197,"results":"45","hashOfConfig":"27"},{"size":648,"mtime":1620927402872,"results":"46","hashOfConfig":"27"},{"size":556,"mtime":1621070553837,"results":"47","hashOfConfig":"27"},{"size":6747,"mtime":1621071793822,"results":"48","hashOfConfig":"27"},{"size":259,"mtime":1618764946929,"results":"49","hashOfConfig":"27"},{"size":162,"mtime":1619113718863,"results":"50","hashOfConfig":"27"},{"size":50,"mtime":1620812068932,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1td1aah",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\index.js",[],["109","110"],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\App.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\reportWebVitals.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\MenuComponent.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\dishes.js",[],["111","112"],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\Dishdetail.js",["113","114","115"],"import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalBody, ModalHeader, Label, FormGroup\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from './shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction Renderdish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <div>\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card key={dish.id}>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\nfunction Rendercomment({ comments, postComment, dishId }) {\r\n\r\n    const com = comments.map((comment) => {\r\n        return (\r\n            <Fade in>\r\n                <Card>\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                </Card>\r\n            </Fade>\r\n        );\r\n    })\r\n    return (\r\n        <div>\r\n            <h2>comments</h2>\r\n            <Stagger in>\r\n                {com}\r\n            </Stagger>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nconst Dishdetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.selectedDish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.selectedDish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <Renderdish dish={props.selectedDish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <Rendercomment comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.selectedDish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length) <= len;\r\nconst minLength = (len) => (val) => (val) && (val.length) >= len;\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment)\r\n        this.toggleModal();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"submit\" color=\"primary\"></span>Submit\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlfor=\"author\" >Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".yourname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        minLength: 'Must be greater than 2 char',\r\n                                        maxLength: 'must be less than 15 char'\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlfor=\"comment\" >Comment</Label>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    rows=\"6\"\r\n                                    placeholder=\"Comment\"\r\n                                    className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dishdetail;","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\MainComponent.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\HeaderComp.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\FooterComp.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\HomeComp.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\ContactComp.js",["116","117","118","119","120","121","122"],"import React,{Component} from 'react';\r\nimport {Breadcrumb ,BreadcrumbItem , Button,Label,Col,Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, Errors, Form } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length) <= len;\r\nconst minLength = (len) => (val) => (val) && (val.length) >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"current state is :\"+JSON.stringify(values));\r\n        alert(\"current state is :\"+JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    \r\n    render(){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\" href=\"skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>send us your feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlfor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                placeholder=\"First Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength : minLength(3),maxLength : maxLength(10)\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength:'Must be greater than 2 char',\r\n                                        maxLength : 'must be less than 10 char'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlfor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                placeholder=\"Last Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength : minLength(3),maxLength :  maxLength(10)\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength:'Must be greater than 2 char',\r\n                                        maxLength : 'must be less than 10 char'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlfor=\"telnum\" md={2}>Contact Telno.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"tel\" name=\"telnum\"\r\n                                placeholder=\"Contact telno.\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength : minLength(3), maxLength : maxLength(10), isNumber\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength:'Must be greater than 2 numbers',\r\n                                        maxLength : 'must be less than 10 numbers',\r\n                                        isNumber : 'must be number'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, validEmail\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail : 'Invalid Email Address'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size:6,offset:2}}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                        className=\"form-check-input\"/>{' '}\r\n                                        <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={{size:3,offset:1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>group</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlfor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                rows=\"12\"\r\n                                className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size:10,offset:2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send feedback\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\leaders.js",[],["123","124"],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\comments.js",[],["125","126"],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\promotions.js",[],["127","128"],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\AboutComponent.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\configureStore.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\dishes.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\comments.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\leaders.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\promotions.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\ActionTypes.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\ActionCreater.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\LoadingComponent.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\Redux\\forms.js",[],"C:\\Users\\ACER\\Desktop\\sample-react\\samplereact\\src\\components\\shared\\baseUrl.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":153,"column":33,"nodeType":"137","endLine":154,"endColumn":62},{"ruleId":"135","severity":1,"message":"138","line":164,"column":33,"nodeType":"137","endLine":170,"endColumn":35},{"ruleId":"135","severity":1,"message":"139","line":183,"column":33,"nodeType":"137","endLine":186,"endColumn":64},{"ruleId":"135","severity":1,"message":"138","line":75,"column":33,"nodeType":"137","endLine":81,"endColumn":35},{"ruleId":"135","severity":1,"message":"138","line":97,"column":33,"nodeType":"137","endLine":103,"endColumn":35},{"ruleId":"135","severity":1,"message":"138","line":119,"column":33,"nodeType":"137","endLine":125,"endColumn":35},{"ruleId":"135","severity":1,"message":"138","line":142,"column":33,"nodeType":"137","endLine":148,"endColumn":35},{"ruleId":"135","severity":1,"message":"140","line":164,"column":41,"nodeType":"137","endLine":165,"endColumn":71},{"ruleId":"135","severity":1,"message":"136","line":171,"column":33,"nodeType":"137","endLine":172,"endColumn":58},{"ruleId":"135","severity":1,"message":"139","line":181,"column":33,"nodeType":"137","endLine":183,"endColumn":60},{"ruleId":"129","replacedBy":"141"},{"ruleId":"131","replacedBy":"142"},{"ruleId":"129","replacedBy":"143"},{"ruleId":"131","replacedBy":"144"},{"ruleId":"129","replacedBy":"145"},{"ruleId":"131","replacedBy":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],["147"],["148"],["147"],["148"],"no-global-assign","no-unsafe-negation"]