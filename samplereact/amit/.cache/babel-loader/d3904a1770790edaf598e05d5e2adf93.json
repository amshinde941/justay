{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\sample-react\\\\samplereact\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\n\nclass LoginForm extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      Username: '',\n      Password: '',\n      remember: false,\n      error: {}\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleLogin() {\n    this.setState({\n      error: {}\n    });\n    const {\n      Username,\n      Password,\n      isRemember\n    } = this.state;\n    return this.props.onSubmit(Username, Password, isRemember);\n  }\n\n  componentDidMount() {// $('input').iCheck({\n    //   checkboxClass: 'icheckbox_square-blue',\n    //   radioClass: 'iradio_square-blue',\n    //   increaseArea: '20%' // optional\n    // });\n  }\n\n  handleChange(name, e) {\n    this.setState({\n      [name]: e.target.value\n    });\n  }\n\n  handleCheck() {\n    this.setState({\n      remember: !this.state.remember\n    });\n  }\n\n  render() {\n    let usernameOptions = {\n      maxLength: 40,\n      placeholder: 'Email',\n      type: 'email',\n      containerClassName: 'input-container'\n    };\n    let passwordOptions = {\n      maxLength: 40,\n      placeholder: 'Password',\n      type: 'password',\n      containerClassName: 'input-container'\n    };\n    let formOptions = {\n      className: 'login-form'\n    };\n    let i18n = {\n      rememberMe: 'Remember Me',\n      submitLabel: 'Sign In'\n    };\n\n    if (this.props.username) {\n      usernameOptions = Object.assign(usernameOptions, this.props.username);\n    }\n\n    if (this.props.password) {\n      passwordOptions = Object.assign(passwordOptions, this.props.password);\n    }\n\n    if (this.props.form) {\n      formOptions = Object.assign(formOptions, this.props.form);\n    }\n\n    if (this.props.text) {\n      i18n = Object.assign(i18n, this.props.text);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"javascript:void(0)\",\n      noValidate: true,\n      onSubmit: this.handleLogin,\n      className: formOptions.className,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: usernameOptions.containerClassName,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          maxLength: usernameOptions.maxLength,\n          placeholder: usernameOptions.placeholder,\n          autoComplete: \"off\",\n          className: usernameOptions.className,\n          onChange: e => this.handleChange('Username', e),\n          type: usernameOptions.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n          errText: this.state.error.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"glyphicon glyphicon-envelope \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordOptions.containerClassName,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          className: passwordOptions.className,\n          maxLength: 40,\n          name: \"Password\",\n          onChange: e => this.handleChange('Password', e),\n          placeholder: passwordOptions.placeholder,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n          errText: this.state.error.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"glyphicon glyphicon-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          content: ' ',\n          marginRight: -15,\n          marginLeft: -15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"remember\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"remember\",\n                checked: this.state.remember,\n                onChange: this.handleCheck,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), \" \", i18n.rememberMe]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btnSubmit\",\n            children: i18n.submitLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLoginForm.propTypes = {\n  username: PropTypes.object,\n  password: PropTypes.object,\n  form: PropTypes.object,\n  text: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired\n};\nLoginForm.defaultProps = {\n  username: {},\n  password: {}\n};\n/*export default function App() {\n  const [email, setEmail] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [val, setVal] = React.useState(\"\");\n\n  const handleSubmit = (event) => {\n    console.log(`\n      Email: ${email}\n      Title: ${title}\n      Message: ${message}\n      Val : ${val}\n    `);\n   \n    alert(\"form successfully submited\");\n\n    event.preventDefault();\n  }\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>send notification</h1>\n\n      <h3>Title:</h3>\n      <label>\n        <input\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          required />\n      </label>\n     \n     <h3>Message:</h3>\n      <label>\n          <textarea  onChange={e => setMessage(e.target.value)} required/>\n        </label>\n      \n      <h2>send to:</h2>\n      \n      <label>\n          Pick your option:\n          <select value={val} onChange={e => setVal(e.target.value)}>\n            <option value=\"allevent\">people of all events</option>\n            <option value=\"event\">particular event peoples</option>\n            <option value=\"single\">single person</option>\n          </select>\n      </label>\n\n      <h3>Email:</h3>\n      <label>\n        <input\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          required />\n      </label>\n      \n      <h3>submit</h3>\n      <button>submit</button>\n\n    </form>\n    \n  );\n}*/","map":{"version":3,"sources":["C:/Users/ACER/Desktop/sample-react/samplereact/src/App.js"],"names":["React","render","LoginForm","Component","constructor","props","context","state","Username","Password","remember","error","handleLogin","bind","handleCheck","handleChange","setState","isRemember","onSubmit","componentDidMount","name","e","target","value","usernameOptions","maxLength","placeholder","type","containerClassName","passwordOptions","formOptions","className","i18n","rememberMe","submitLabel","username","Object","assign","password","form","text","email","content","marginRight","marginLeft","propTypes","PropTypes","object","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nclass LoginForm extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      Username: '',\n      Password: '',\n      remember: false,\n      error: {}\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleLogin() {\n    this.setState({\n      error: {}\n    });\n\n    const { Username, Password, isRemember } = this.state;\n\n    return this.props.onSubmit(Username, Password, isRemember);\n  }\n\n  componentDidMount() {\n    // $('input').iCheck({\n    //   checkboxClass: 'icheckbox_square-blue',\n    //   radioClass: 'iradio_square-blue',\n    //   increaseArea: '20%' // optional\n    // });\n  }\n\n  handleChange(name, e) {\n    this.setState({\n      [name]: e.target.value\n    });\n  }\n\n  handleCheck() {\n    this.setState({\n      remember: !this.state.remember\n    });\n  }\n\n  render() {\n    let usernameOptions = {\n      maxLength: 40,\n      placeholder: 'Email',\n      type: 'email',\n      containerClassName: 'input-container'\n    };\n\n    let passwordOptions = {\n      maxLength: 40,\n      placeholder: 'Password',\n      type: 'password',\n      containerClassName: 'input-container'\n    };\n\n    let formOptions = {\n      className: 'login-form'\n    };\n\n    let i18n = {\n      rememberMe: 'Remember Me',\n      submitLabel: 'Sign In'\n    };\n\n    if (this.props.username) {\n      usernameOptions = Object.assign(usernameOptions, this.props.username);\n    }\n\n    if (this.props.password) {\n      passwordOptions = Object.assign(passwordOptions, this.props.password);\n    }\n\n    if (this.props.form) {\n      formOptions = Object.assign(formOptions, this.props.form);\n    }\n\n    if (this.props.text) {\n      i18n = Object.assign(i18n, this.props.text);\n    }\n\n    return (\n      <form action=\"javascript:void(0)\" noValidate onSubmit={this.handleLogin} className={formOptions.className}>\n        <div className={usernameOptions.containerClassName}>\n          <input\n            maxLength={usernameOptions.maxLength}\n            placeholder={usernameOptions.placeholder}\n            autoComplete=\"off\"\n            className={usernameOptions.className}\n            onChange={e => this.handleChange('Username', e)}\n            type={usernameOptions.type}\n          />\n          <ErrorText errText={this.state.error.email} />\n          <span className=\"glyphicon glyphicon-envelope \" />\n        </div>\n        <div className={passwordOptions.containerClassName}>\n          <input\n            autoComplete=\"off\"\n            className={passwordOptions.className}\n            maxLength={40}\n            name=\"Password\"\n            onChange={e => this.handleChange('Password', e)}\n            placeholder={passwordOptions.placeholder}\n            type=\"password\"\n          />\n          <ErrorText errText={this.state.error.password} />\n          <span className=\"glyphicon glyphicon-lock\" />\n        </div>\n        <div style={{\n            content: ' ',\n            marginRight: -15,\n            marginLeft: -15\n          }}\n        >\n          <div className=\"remember-container\">\n            <div>\n              <label htmlFor=\"remember\">\n                <input\n                  id=\"remember\"\n                  checked={this.state.remember}\n                  onChange={this.handleCheck}\n                  type=\"checkbox\"\n                /> {i18n.rememberMe}\n              </label>\n            </div>\n          </div>\n          <div className=\"button-container\">\n            <button type=\"submit\" className=\"btnSubmit\">{i18n.submitLabel}</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\nLoginForm.propTypes = {\n  username: PropTypes.object,\n  password: PropTypes.object,\n  form: PropTypes.object,\n  text: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired\n};\n\n\nLoginForm.defaultProps = {\n  username: {},\n  password: {}\n};\n/*export default function App() {\n  const [email, setEmail] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [val, setVal] = React.useState(\"\");\n\n  const handleSubmit = (event) => {\n    console.log(`\n      Email: ${email}\n      Title: ${title}\n      Message: ${message}\n      Val : ${val}\n    `);\n   \n    alert(\"form successfully submited\");\n\n    event.preventDefault();\n  }\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>send notification</h1>\n\n      <h3>Title:</h3>\n      <label>\n        <input\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          required />\n      </label>\n     \n     <h3>Message:</h3>\n      <label>\n          <textarea  onChange={e => setMessage(e.target.value)} required/>\n        </label>\n      \n      <h2>send to:</h2>\n      \n      <label>\n          Pick your option:\n          <select value={val} onChange={e => setVal(e.target.value)}>\n            <option value=\"allevent\">people of all events</option>\n            <option value=\"event\">particular event peoples</option>\n            <option value=\"single\">single person</option>\n          </select>\n      </label>\n\n      <h3>Email:</h3>\n      <label>\n        <input\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          required />\n      </label>\n      \n      <h3>submit</h3>\n      <button>submit</button>\n\n    </form>\n    \n  );\n}*/\n\n"]},"metadata":{},"sourceType":"module"}