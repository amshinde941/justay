{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\sample-react\\\\samplereact\\\\src\\\\components\\\\LoginForm.js\";\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ErrorText from './ErrorText';\nimport styles from './style.scss';\n\nclass LoginForm extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      Username: '',\n      Password: '',\n      remember: false,\n      error: {}\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleLogin() {\n    this.setState({\n      error: {}\n    });\n    const {\n      Username,\n      Password,\n      isRemember\n    } = this.state;\n    return this.props.onSubmit(Username, Password, isRemember);\n  }\n\n  componentDidMount() {// $('input').iCheck({\n    //   checkboxClass: 'icheckbox_square-blue',\n    //   radioClass: 'iradio_square-blue',\n    //   increaseArea: '20%' // optional\n    // });\n  }\n\n  handleChange(name, e) {\n    this.setState({\n      [name]: e.target.value\n    });\n  }\n\n  handleCheck() {\n    this.setState({\n      remember: !this.state.remember\n    });\n  }\n\n  render() {\n    let usernameOptions = {\n      maxLength: 40,\n      placeholder: 'Email',\n      type: 'email',\n      containerClassName: 'input-container'\n    };\n    let passwordOptions = {\n      maxLength: 40,\n      placeholder: 'Password',\n      type: 'password',\n      containerClassName: 'input-container'\n    };\n    let formOptions = {\n      className: 'login-form'\n    };\n    let i18n = {\n      rememberMe: 'Remember Me',\n      submitLabel: 'Sign In'\n    };\n\n    if (this.props.username) {\n      usernameOptions = Object.assign(usernameOptions, this.props.username);\n    }\n\n    if (this.props.password) {\n      passwordOptions = Object.assign(passwordOptions, this.props.password);\n    }\n\n    if (this.props.form) {\n      formOptions = Object.assign(formOptions, this.props.form);\n    }\n\n    if (this.props.text) {\n      i18n = Object.assign(i18n, this.props.text);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"javascript:void(0)\",\n      noValidate: true,\n      onSubmit: this.handleLogin,\n      className: formOptions.className,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: usernameOptions.containerClassName,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          maxLength: usernameOptions.maxLength,\n          placeholder: usernameOptions.placeholder,\n          autoComplete: \"off\",\n          className: usernameOptions.className,\n          onChange: e => this.handleChange('Username', e),\n          type: usernameOptions.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n          errText: this.state.error.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"glyphicon glyphicon-envelope \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordOptions.containerClassName,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          className: passwordOptions.className,\n          maxLength: 40,\n          name: \"Password\",\n          onChange: e => this.handleChange('Password', e),\n          placeholder: passwordOptions.placeholder,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n          errText: this.state.error.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"glyphicon glyphicon-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          content: ' ',\n          marginRight: -15,\n          marginLeft: -15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"remember\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"remember\",\n                checked: this.state.remember,\n                onChange: this.handleCheck,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), \" \", i18n.rememberMe]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btnSubmit\",\n            children: i18n.submitLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLoginForm.propTypes = {\n  username: PropTypes.object,\n  password: PropTypes.object,\n  form: PropTypes.object,\n  text: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired\n};\nLoginForm.defaultProps = {\n  username: {},\n  password: {}\n};\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/ACER/Desktop/sample-react/samplereact/src/components/LoginForm.js"],"names":["React","PropTypes","ErrorText","styles","LoginForm","Component","constructor","props","context","state","Username","Password","remember","error","handleLogin","bind","handleCheck","handleChange","setState","isRemember","onSubmit","componentDidMount","name","e","target","value","render","usernameOptions","maxLength","placeholder","type","containerClassName","passwordOptions","formOptions","className","i18n","rememberMe","submitLabel","username","Object","assign","password","form","text","email","content","marginRight","marginLeft","propTypes","object","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport ErrorText from './ErrorText';\r\nimport styles from './style.scss';\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      Username: '',\r\n      Password: '',\r\n      remember: false,\r\n      error: {}\r\n    };\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleCheck = this.handleCheck.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      error: {}\r\n    });\r\n\r\n    const { Username, Password, isRemember } = this.state;\r\n\r\n    return this.props.onSubmit(Username, Password, isRemember);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // $('input').iCheck({\r\n    //   checkboxClass: 'icheckbox_square-blue',\r\n    //   radioClass: 'iradio_square-blue',\r\n    //   increaseArea: '20%' // optional\r\n    // });\r\n  }\r\n\r\n  handleChange(name, e) {\r\n    this.setState({\r\n      [name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleCheck() {\r\n    this.setState({\r\n      remember: !this.state.remember\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let usernameOptions = {\r\n      maxLength: 40,\r\n      placeholder: 'Email',\r\n      type: 'email',\r\n      containerClassName: 'input-container'\r\n    };\r\n\r\n    let passwordOptions = {\r\n      maxLength: 40,\r\n      placeholder: 'Password',\r\n      type: 'password',\r\n      containerClassName: 'input-container'\r\n    };\r\n\r\n    let formOptions = {\r\n      className: 'login-form'\r\n    };\r\n\r\n    let i18n = {\r\n      rememberMe: 'Remember Me',\r\n      submitLabel: 'Sign In'\r\n    };\r\n\r\n    if (this.props.username) {\r\n      usernameOptions = Object.assign(usernameOptions, this.props.username);\r\n    }\r\n\r\n    if (this.props.password) {\r\n      passwordOptions = Object.assign(passwordOptions, this.props.password);\r\n    }\r\n\r\n    if (this.props.form) {\r\n      formOptions = Object.assign(formOptions, this.props.form);\r\n    }\r\n\r\n    if (this.props.text) {\r\n      i18n = Object.assign(i18n, this.props.text);\r\n    }\r\n\r\n    return (\r\n      <form action=\"javascript:void(0)\" noValidate onSubmit={this.handleLogin} className={formOptions.className}>\r\n        <div className={usernameOptions.containerClassName}>\r\n          <input\r\n            maxLength={usernameOptions.maxLength}\r\n            placeholder={usernameOptions.placeholder}\r\n            autoComplete=\"off\"\r\n            className={usernameOptions.className}\r\n            onChange={e => this.handleChange('Username', e)}\r\n            type={usernameOptions.type}\r\n          />\r\n          <ErrorText errText={this.state.error.email} />\r\n          <span className=\"glyphicon glyphicon-envelope \" />\r\n        </div>\r\n        <div className={passwordOptions.containerClassName}>\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={passwordOptions.className}\r\n            maxLength={40}\r\n            name=\"Password\"\r\n            onChange={e => this.handleChange('Password', e)}\r\n            placeholder={passwordOptions.placeholder}\r\n            type=\"password\"\r\n          />\r\n          <ErrorText errText={this.state.error.password} />\r\n          <span className=\"glyphicon glyphicon-lock\" />\r\n        </div>\r\n        <div style={{\r\n            content: ' ',\r\n            marginRight: -15,\r\n            marginLeft: -15\r\n          }}\r\n        >\r\n          <div className=\"remember-container\">\r\n            <div>\r\n              <label htmlFor=\"remember\">\r\n                <input\r\n                  id=\"remember\"\r\n                  checked={this.state.remember}\r\n                  onChange={this.handleCheck}\r\n                  type=\"checkbox\"\r\n                /> {i18n.rememberMe}\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <button type=\"submit\" className=\"btnSubmit\">{i18n.submitLabel}</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nLoginForm.propTypes = {\r\n  username: PropTypes.object,\r\n  password: PropTypes.object,\r\n  form: PropTypes.object,\r\n  text: PropTypes.object,\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nLoginForm.defaultProps = {\r\n  username: {},\r\n  password: {}\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}