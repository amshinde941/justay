{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Leaders = (state = {\n  isLoading: true,\n  errmess: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        errmess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errmess: null,\n        leaders: []\n      };\n\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errmess: action.payload,\n        leaders: []\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Leaders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaders\");","map":{"version":3,"sources":["C:/Users/ACER/Desktop/sample-react/samplereact/src/Redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","errmess","leaders","action","type","ADD_LEADERS","payload","LEADERS_LOADING","LEADERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAC5BC,EAAAA,SAAS,EAAE,IADiB;AAE5BC,EAAAA,OAAO,EAAE,IAFmB;AAG5BC,EAAAA,OAAO,EAAE;AAHmB,CAAT,EAIpBC,MAJoB,KAIT;AACV,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,WAAjB;AACI,aAAO,EAAE,GAAGN,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAE,IAAvC;AAA6CC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAA7D,OAAP;;AAEJ,SAAKT,WAAW,CAACU,eAAjB;AACI,aAAO,EAAE,GAAGR,KAAL;AAAYC,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAAP;;AAEJ,SAAKL,WAAW,CAACW,cAAjB;AACI,aAAO,EAAE,GAAGT,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAEE,MAAM,CAACG,OAA9C;AAAuDJ,QAAAA,OAAO,EAAE;AAAhE,OAAP;;AAEJ;AACI,aAAOH,KAAP;AAXR;AAaH,CAlBM;KAAMD,O","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errmess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errmess: null, leaders: action.payload }\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errmess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errmess: action.payload, leaders: [] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}