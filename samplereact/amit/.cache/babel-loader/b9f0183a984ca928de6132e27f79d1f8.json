{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Comments = (state = {\n  errMess: null,\n  comments: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return { ...state,\n        isLoading: false,\n        errmess: null,\n        comments: action.payload\n      };\n\n    case ActionTypes.COMMENTS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errmess: action.payload,\n        comments: []\n      };\n\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.comments.length;\n      comment.date = new Date().toISOString();\n      return { ...state,\n        comments: state.comments.concat(comment)\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/ACER/Desktop/sample-react/samplereact/src/Redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","isLoading","errmess","payload","COMMENTS_FAILED","ADD_COMMENT","comment","id","length","date","Date","toISOString","concat"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAEC,KAAK,GAAG;AAC9BC,EAAAA,OAAO,EAAC,IADsB;AAE9BC,EAAAA,QAAQ,EAAC;AAFqB,CAAV,EAGpBC,MAHoB,KAGR;AACZ,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWM,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CL,QAAAA,QAAQ,EAAEC,MAAM,CAACK;AAA7D,OAAP;;AAEJ,SAAKV,WAAW,CAACW,eAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWM,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEJ,MAAM,CAACK,OAA7C;AAAsDN,QAAAA,QAAQ,EAAE;AAAhE,OAAP;;AAEJ,SAAKJ,WAAW,CAACY,WAAjB;AACI,UAAIC,OAAO,GAAGR,MAAM,CAACK,OAArB;AACAG,MAAAA,OAAO,CAACC,EAAR,GAAaZ,KAAK,CAACE,QAAN,CAAeW,MAA5B;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;AACA,aAAO,EAAC,GAAGhB,KAAJ;AAAWE,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAee,MAAf,CAAsBN,OAAtB;AAArB,OAAP;;AACJ;AACI,aAAOX,KAAP;AAbR;AAeH,CAnBM;KAAMD,Q","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = ( state = {\r\n    errMess:null,\r\n    comments:[]\r\n} , action ) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errmess: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errmess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.id = state.comments.length;\r\n            comment.date = new Date().toISOString();\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}