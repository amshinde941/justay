{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\sample-react\\\\samplereact\\\\src\\\\components\\\\Dishdetail.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, FormGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Errors, LocalForm } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from './shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction Renderdish({\n  dish\n}) {\n  if (dish != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FadeTransform, {\n        in: true,\n        transformProps: {\n          exitTransform: 'scale(0.5) translateY(-50%)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardImg, {\n            width: \"100%\",\n            src: baseUrl + dish.image,\n            alt: dish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: dish.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: dish.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, dish.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = Renderdish;\n\nfunction Rendercomment({\n  comments,\n  postComment,\n  dishId\n}) {\n  const com = comments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(Fade, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"-- \", comment.author, \" , \", new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit'\n            }).format(new Date(Date.parse(comment.date)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stagger, {\n      in: true,\n      children: com\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      dishId: dishId,\n      postComment: postComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Rendercomment;\n\nconst Dishdetail = props => {\n  if (props.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  } else if (props.errMess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.errMess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  } else if (props.selectedDish != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/menu\",\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            active: true,\n            children: props.selectedDish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 m-1\",\n          children: /*#__PURE__*/_jsxDEV(Renderdish, {\n            dish: props.selectedDish\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 m-1\",\n          children: /*#__PURE__*/_jsxDEV(Rendercomment, {\n            comments: props.comments,\n            postComment: props.postComment,\n            dishId: props.selectedDish.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c3 = Dishdetail;\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    this.toggleModal();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"submit\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), \"Submit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(LocalForm, {\n            onSubmit: values => this.handleSubmit(values),\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"rating\",\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Control.select, {\n                model: \".rating\",\n                name: \"rating\",\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlfor: \"author\",\n                children: \"Your Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".author\",\n                id: \"author\",\n                name: \"author\",\n                placeholder: \"Your Name\",\n                className: \"form-control\",\n                validators: {\n                  required,\n                  minLength: minLength(3),\n                  maxLength: maxLength(15)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".yourname\",\n                show: \"touched\",\n                messages: {\n                  minLength: 'Must be greater than 2 char',\n                  maxLength: 'must be less than 15 char'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlfor: \"comment\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Control.textarea, {\n                model: \".comment\",\n                id: \"comment\",\n                name: \"comment\",\n                rows: \"6\",\n                placeholder: \"Comment\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Dishdetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Renderdish\");\n$RefreshReg$(_c2, \"Rendercomment\");\n$RefreshReg$(_c3, \"Dishdetail\");","map":{"version":3,"sources":["C:/Users/ACER/Desktop/sample-react/samplereact/src/components/Dishdetail.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Label","FormGroup","Link","Control","Errors","LocalForm","Loading","baseUrl","FadeTransform","Fade","Stagger","Renderdish","dish","exitTransform","image","name","description","id","Rendercomment","comments","postComment","dishId","com","map","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","props","isLoading","errMess","selectedDish","required","val","length","maxLength","len","minLength","CommentForm","constructor","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","rating","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalBody, ModalHeader, Label, FormGroup\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from './shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction Renderdish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <div>\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card key={dish.id}>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\nfunction Rendercomment({ comments, postComment, dishId }) {\r\n\r\n    const com = comments.map((comment) => {\r\n        return (\r\n            <Fade in>\r\n                <Card>\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                </Card>\r\n            </Fade>\r\n        );\r\n    })\r\n    return (\r\n        <div>\r\n            <h2>comments</h2>\r\n            <Stagger in>\r\n                {com}\r\n            </Stagger>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nconst Dishdetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.selectedDish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.selectedDish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <Renderdish dish={props.selectedDish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <Rendercomment comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.selectedDish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length) <= len;\r\nconst minLength = (len) => (val) => (val) && (val.length) >= len;\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment)\r\n        this.toggleModal();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"submit\" color=\"primary\"></span>Submit\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlfor=\"author\" >Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".yourname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        minLength: 'Must be greater than 2 char',\r\n                                        maxLength: 'must be less than 15 char'\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlfor=\"comment\" >Comment</Label>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    rows=\"6\"\r\n                                    placeholder=\"Comment\"\r\n                                    className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dishdetail;"]},"metadata":{},"sourceType":"module"}